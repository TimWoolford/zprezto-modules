#function gclone {
{
    function $0_doClone {
        local repoUrl=$1 group=$2 project=${3%.git}.git target=$4

        if [[ ${repoUrl} =~ "^https://" ]]; then
            git clone ${repoUrl}/${group}/${project} ${target}
        elif [[ ${repoUrl} =~ "^(.*)@" ]]; then
            git clone ${repoUrl}:${group}/${project} ${target}
        elif [[ -n "${REPOS[${repoUrl}]}" ]]; then
            IFS="|" read conn_type rest <<< ${REPOS[${repoUrl}]}

            if [[ "${conn_type}" == "https" ]]; then
                $0 https://${repoUrl} ${group} ${project} ${target}
            else
                $0 ${conn_type}${repoUrl} ${group} ${project} ${target}
            fi
        else
            echo "$FX[bold]$FG[red]Cannot resolve repo [$repoUrl /$group/$project]$FX[none]$FG[none]"
        fi
    }

    if [[ $# == 1 ]]; then
        local myPath=${$(pwd)#${CHECKOUT_DIR}/}
        local repo group
        IFS='/' read repo group <<< ${myPath}

        $0_doClone ${repo} ${group} ${1}

    elif [[ $# == 2 ]]; then

        $0_doClone ${default_repo} ${1} ${2} "${CHECKOUT_DIR}/${DEFAULT_REPO#(https://|*@)}/${1}/${2}"

    elif [[ $# == 3 ]]; then

        $0_doClone $1 $2 $3 "${CHECKOUT_DIR}/${1#(https://|*@)}/${2}/${3}"
    fi

} always {
    unfunction $0_doClone
}
#}
